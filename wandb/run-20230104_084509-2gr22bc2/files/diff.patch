Submodule rl-baselines3-zoo contains modified content
diff --git a/rl-baselines3-zoo/rl_zoo3/import_envs.py b/rl-baselines3-zoo/rl_zoo3/import_envs.py
index dc3a96f..76b0532 100644
--- a/rl-baselines3-zoo/rl_zoo3/import_envs.py
+++ b/rl-baselines3-zoo/rl_zoo3/import_envs.py
@@ -43,6 +43,10 @@ try:
 except ImportError:
     rocket_lander_gym = None
 
+try:
+    import sim.gym_environment  # pytype: disable=import-error
+except ImportError:
+    gym_environment = None
 
 # Register no vel envs
 def create_no_vel_env(env_id: str):
diff --git a/rl-baselines3-zoo/setup.py b/rl-baselines3-zoo/setup.py
index 4e73be4..acdd15a 100644
--- a/rl-baselines3-zoo/setup.py
+++ b/rl-baselines3-zoo/setup.py
@@ -1,5 +1,6 @@
 import os
 import shutil
+import errno, stat
 
 from setuptools import setup
 
@@ -44,7 +45,7 @@ setup(
     url="https://github.com/DLR-RM/rl-baselines3-zoo",
     author_email="antonin.raffin@dlr.de",
     keywords="reinforcement-learning-algorithms reinforcement-learning machine-learning "
-    "gym openai stable baselines toolbox python data-science",
+             "gym openai stable baselines toolbox python data-science",
     license="MIT",
     long_description=long_description,
     long_description_content_type="text/markdown",
@@ -60,9 +61,18 @@ setup(
     ],
 )
 
-# Remove copied files after packaging
-shutil.rmtree(os.path.join("rl_zoo3", "hyperparams"))
 
+def handleRemoveReadonly(func, path, exc):
+    excvalue = exc[1]
+    if func in (os.rmdir, os.remove) and excvalue.errno == errno.EACCES:
+        os.chmod(path, stat.S_IRWXU | stat.S_IRWXG | stat.S_IRWXO)  # 0777
+        func(path)
+    else:
+        raise
+
+
+# Remove copied files after packaging
+shutil.rmtree(os.path.join("rl_zoo3", "hyperparams"), ignore_errors=False, onerror=handleRemoveReadonly)
 
 # python setup.py sdist
 # python setup.py bdist_wheel
diff --git a/sim/__pycache__/environments.cpython-37.pyc b/sim/__pycache__/environments.cpython-37.pyc
index 95dbf6e..4874b40 100644
Binary files a/sim/__pycache__/environments.cpython-37.pyc and b/sim/__pycache__/environments.cpython-37.pyc differ
diff --git a/sim/__pycache__/gym_environment.cpython-37.pyc b/sim/__pycache__/gym_environment.cpython-37.pyc
index 19ac92d..fce9e03 100644
Binary files a/sim/__pycache__/gym_environment.cpython-37.pyc and b/sim/__pycache__/gym_environment.cpython-37.pyc differ
diff --git a/sim/environments.py b/sim/environments.py
index 32c335a..5932b36 100644
--- a/sim/environments.py
+++ b/sim/environments.py
@@ -43,19 +43,21 @@ class BaseEnvironment:
         return self.model.get_time() >= self.t_final
 
     def restart(self):
+        print("Restarting!")
         self.model = Pendulum(delta_t=self.delta_t)
         self.controller = PID(delta_t=self.delta_t)
         self.generator = CPG(delta_t=self.delta_t, x_0=[0, -1])
 
     def render(self):
         # Get key variables
+        print("I am here!")
         t_traj = self.model.get_temporal_traj()
         x_traj = self.model.get_state_traj()
         q_traj = x_traj[:, 0]
 
         display.clear_output(wait=True)
         plt.clf()
-        # plt.figure(figsize=(10,7))
+        plt.figure(figsize=(10, 7))
 
         # plt.subplot(2, 1, 1)
 
diff --git a/sim/gym_environment.py b/sim/gym_environment.py
index 9716633..f565538 100644
--- a/sim/gym_environment.py
+++ b/sim/gym_environment.py
@@ -9,6 +9,8 @@ from sim.environments import BaseEnvironment
 
 
 class BaseGymEnvironment(gym.Env):
+    metadata = {'render.modes': ['human', 'rgb_array']}
+
     def __init__(self, reward_func: Callable = None, action_scale=None):
         super().__init__()
 
@@ -70,4 +72,10 @@ class BaseGymEnvironment(gym.Env):
         return obs
 
     def render(self, mode="human"):
-        self.sim.render()
+        if mode == 'rgb_array':
+            return None  # return RGB frame suitable for video
+        elif mode == 'human':
+            self.sim.render()
+        else:
+            super(BaseGymEnvironment, self).render(mode=mode)  # just raise an exception
+
